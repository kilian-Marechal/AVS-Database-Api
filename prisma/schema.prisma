generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Indexations {
  id                Int      @id @default(autoincrement())
  entity            String   @unique
  latestBlockNumber Int
  updatedAt         DateTime @updatedAt
}

model Avs {
  id      Int     @id @default(autoincrement())
  address String  @unique
  name    String?

  // Computed values
  operatorCount Int?
  restakerCount Int?
  totalRestaked Float?

  operators               Operator[]                @relation("AvsOperators")
  restakers               Restaker[]                @relation("AvsRestakers")
  OperatorAvsRegistration OperatorAvsRegistration[]
}

model Operator {
  id      Int     @id @default(autoincrement())
  address String  @unique
  name    String?

  // Computed values
  restakerCount Int?
  totalRestaked Float?

  avss                             Avs[]                              @relation("AvsOperators")
  restakers                        Restaker[]                         @relation("OperatorRestakers")
  strategies                       Strategy[]                         @relation("OperatorStrategies")
  OperatorAvsRegistration          OperatorAvsRegistration[]
  StakerOperatorDelegations        StakerOperatorDelegations[]
  StakerOperatorUndelegations      StakerOperatorUndelegations[]
  StakerOperatorForceUndelegations StakerOperatorForceUndelegations[]
  OperatorSharesDecreased          OperatorSharesDecreased[]
  OperatorSharesIncreased          OperatorSharesIncreased[]
  OperatorStrategy                 OperatorStrategy[]
}

model Restaker {
  id       Int     @id @default(autoincrement())
  address  String  @unique
  name     String?
  ethValue Float?

  avss                             Avs[]                              @relation("AvsRestakers")
  operators                        Operator[]                         @relation("OperatorRestakers")
  StakerOperatorDelegations        StakerOperatorDelegations[]
  StakerOperatorUndelegations      StakerOperatorUndelegations[]
  StakerOperatorForceUndelegations StakerOperatorForceUndelegations[]
  OperatorSharesDecreased          OperatorSharesDecreased[]
  OperatorSharesIncreased          OperatorSharesIncreased[]
}

model Strategy {
  id            Int    @id @default(autoincrement())
  address       String @unique
  tokenEthValue Float?

  operators               Operator[]                @relation("OperatorStrategies")
  OperatorSharesDecreased OperatorSharesDecreased[]
  OperatorSharesIncreased OperatorSharesIncreased[]
  OperatorStrategy        OperatorStrategy[]
}

model OperatorAvsRegistration {
  id              Int     @id @default(autoincrement())
  graphId         String  @unique
  status          Boolean
  blockNumber     Int
  blockTimestamp  Int
  transactionHash String

  operatorId Int
  operator   Operator @relation(fields: [operatorId], references: [id])
  avsId      Int
  avs        Avs      @relation(fields: [avsId], references: [id])

  @@index([blockNumber, operatorId, avsId])
}

model StakerOperatorDelegations {
  id              Int    @id @default(autoincrement())
  graphId         String @unique
  blockNumber     Int
  blockTimestamp  Int
  transactionHash String

  operatorId Int
  operator   Operator @relation(fields: [operatorId], references: [id])
  restakerId Int
  restaker   Restaker @relation(fields: [restakerId], references: [id])

  @@index([blockNumber, operatorId, restakerId])
}

model StakerOperatorUndelegations {
  id              Int    @id @default(autoincrement())
  graphId         String @unique
  blockNumber     Int
  blockTimestamp  Int
  transactionHash String

  operatorId Int
  operator   Operator @relation(fields: [operatorId], references: [id])
  restakerId Int
  restaker   Restaker @relation(fields: [restakerId], references: [id])

  @@index([blockNumber, operatorId, restakerId])
}

model StakerOperatorForceUndelegations {
  id              Int    @id @default(autoincrement())
  graphId         String @unique
  blockNumber     Int
  blockTimestamp  Int
  transactionHash String

  operatorId Int
  operator   Operator @relation(fields: [operatorId], references: [id])
  restakerId Int
  restaker   Restaker @relation(fields: [restakerId], references: [id])

  @@index([blockNumber, operatorId, restakerId])
}

model OperatorSharesIncreased {
  id              Int    @id @default(autoincrement())
  graphId         String @unique
  blockNumber     Int
  blockTimestamp  Int
  transactionHash String

  shares String

  operatorId Int
  operator   Operator @relation(fields: [operatorId], references: [id])
  restakerId Int
  restaker   Restaker @relation(fields: [restakerId], references: [id])
  strategyId Int
  strategy   Strategy @relation(fields: [strategyId], references: [id])
}

model OperatorSharesDecreased {
  id              Int    @id @default(autoincrement())
  graphId         String @unique
  blockNumber     Int
  blockTimestamp  Int
  transactionHash String

  shares String

  operatorId Int
  operator   Operator @relation(fields: [operatorId], references: [id])
  restakerId Int
  restaker   Restaker @relation(fields: [restakerId], references: [id])
  strategyId Int
  strategy   Strategy @relation(fields: [strategyId], references: [id])
}

model OperatorStrategy {
  id          Int      @id @default(autoincrement())
  operator    Operator @relation(fields: [operatorId], references: [id])
  operatorId  Int
  strategy    Strategy @relation(fields: [strategyId], references: [id])
  strategyId  Int
  tokenAmount Float
  usdValue    Float
  updatedAt   DateTime @updatedAt

  @@unique([operatorId, strategyId])
}
